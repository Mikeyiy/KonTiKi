2014/09/01  00:55

上个星期就默默念叨着要开始写一款能满足自己业余时间研究渲染算法需要的引擎了；周六的半夜看到汽车之家论坛一哥们自己动手打造了一辆高仿版的牧马人，热血沸腾，从而笃定了写引擎的决心。

好久没写C++代码了， 将学习和复习到的内容整理如下：
1. 整体的架构源于网上一篇文章，谷歌关键字“Component based game engine”;

2. 学习使用CMake。这个的确是个好东西，以前不知道，自己配置各种编译环境，回想起来都是泪； 现在好了，一个配置文件，若干命令搞定几乎所有平台、编译器和IDE工程，真是满满的幸福。

3. 苹果上的Sublime Text文本编辑器是个好东西，前天用UE， 今天用这个工具，比较起来，起码在撰写代码方面要爽不少，无论是操作上还是视觉上。

4. 如何将C++ Template的类型限制为某些特定类型：网上资料说 static_assert( is_base_of<A, B>::value ); 就可以搞定， 但不幸的是编译没通过，还不知道问题在哪。

5. 成员函数模板，在调用时可以  methodname<T>();

6. 迭代器的作用： 模板让算法独立与数据类型；迭代器让算法独立与容器类型。

7，子类初始化列表中调用父类构造函数  childConstructor( ... ) : baseConstructor( ... ).

8. 控制台的输出。

9. override的位置。

10.static 变量的申明和定义： class A { public: static int B; }    int B;
